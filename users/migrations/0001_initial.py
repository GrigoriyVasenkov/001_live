# Generated by Django 2.2.16 on 2022-05-14 16:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=256, unique=True, verbose_name='Электронная почта')),
                ('first_name', models.CharField(max_length=30, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=30, verbose_name='Фамилия')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Персонал')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('date_birthday', models.DateTimeField(verbose_name='Дата рождения')),
                ('gender', models.CharField(max_length=7, verbose_name='Пол')),
                ('info', models.TextField(blank=True, verbose_name='Личная информация')),
                ('phone', models.CharField(max_length=15, null=True, verbose_name='Телефон')),
                ('telegram_url', models.CharField(max_length=256, null=True, verbose_name='Telegram URL')),
                ('vk_url', models.CharField(max_length=256, null=True, verbose_name='VK URL')),
                ('status', models.CharField(choices=[('Волонтер', 'Волонтер'), ('Организатор', 'Организатор')], default='Волонтер', max_length=20, verbose_name='Статус')),
                ('avatar_url', models.CharField(default='img/profile.png', max_length=256, verbose_name='Аватар URL')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователи',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', users.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Наименование события')),
                ('status', models.CharField(max_length=256, verbose_name='Статус мероприятия')),
                ('avatar_url', models.CharField(max_length=256, verbose_name='Аватар URL')),
                ('description', models.TextField(verbose_name='Описание события')),
                ('date_start', models.DateTimeField(verbose_name='Дата начала')),
                ('date_end', models.DateTimeField(verbose_name='Дата завершения')),
                ('slug', models.SlugField(unique=True, verbose_name='Ссылка события')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
            ],
        ),
        migrations.CreateModel(
            name='Function',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Наименование')),
                ('description', models.TextField(verbose_name='Описание')),
                ('task', models.TextField(verbose_name='Задачи')),
                ('condition', models.TextField(verbose_name='Условия')),
                ('slug', models.SlugField(unique=True, verbose_name='Ссылка функции')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=256, verbose_name='Полное наименование')),
                ('name', models.CharField(max_length=256, verbose_name='Наименование')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('email', models.EmailField(max_length=256, verbose_name='Электронная почта')),
                ('address', models.CharField(max_length=256, verbose_name='Адрес')),
                ('phone', models.CharField(max_length=15, verbose_name='Телефон')),
                ('avatar_url', models.CharField(max_length=256, verbose_name='Аватар URL')),
                ('website', models.CharField(max_length=256, verbose_name='Сайт Организации')),
                ('legal_form', models.CharField(db_index=True, max_length=256, verbose_name='Организационно-правовая форма')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('leader', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organizations', to=settings.AUTH_USER_MODEL, verbose_name='Руководитель')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=256, verbose_name='Наименование')),
                ('full_name', models.CharField(db_index=True, max_length=256, verbose_name='Полное наименование')),
                ('website', models.CharField(db_index=True, max_length=256, verbose_name='Сайт Проекта')),
                ('material_url', models.CharField(max_length=256, verbose_name='Материал')),
                ('avatar_url', models.CharField(max_length=256, verbose_name='Аватар URL')),
                ('status', models.CharField(max_length=256, verbose_name='Статус проекта')),
                ('description', models.TextField(verbose_name='Описание')),
                ('goal', models.TextField(verbose_name='Цели')),
                ('result', models.TextField(verbose_name='Результаты')),
                ('slug', models.SlugField(unique=True, verbose_name='Ссылка проекта')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
            ],
        ),
        migrations.CreateModel(
            name='UserProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserFunction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('function', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Function')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='client',
            field=models.ManyToManyField(related_name='projects_many', through='users.UserProject', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects', to='users.Organization', verbose_name='Организация'),
        ),
        migrations.AddField(
            model_name='function',
            name='client',
            field=models.ManyToManyField(related_name='functions_many', through='users.UserFunction', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='function',
            name='event',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='functions', to='users.Event', verbose_name='Событие'),
        ),
        migrations.AddField(
            model_name='event',
            name='client',
            field=models.ManyToManyField(related_name='events_many', through='users.UserEvent', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='event',
            name='contact_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to=settings.AUTH_USER_MODEL, verbose_name='Контактное лицо'),
        ),
        migrations.AddField(
            model_name='event',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='users.Project', verbose_name='Проект'),
        ),
    ]
